package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.Servo;
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.util.ElapsedTime;
import com.qualcomm.robotcore.hardware.DcMotor;

@TeleOp
public class Encoder extends LinearOpMode{
    
    private ElapsedTime runtime = new ElapsedTime();
    

    
    private DcMotor CascadeLift;
    
    private Servo bakje;
    @Override 
    public void runOpMode() {
        
        
        CascadeLift = hardwareMap.get(DcMotor.class, "CascadeLift");
        bakje = hardwareMap.get(Servo.class, "bakje");

        CascadeLift.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);
        bakje.setPosition(0.37);
        // Set the mode for all motors to RUN_TO_POSITION
     
        CascadeLift.setMode(DcMotor.RunMode.RUN_USING_ENCODER);
        
        waitForStart();
        
        // Main loop to control robot behavior
        while (opModeIsActive()) {
            
            // Control CascadeLift with the Y button (move to target position)
            if (gamepad1.y) {
                CascadeLift.setTargetPosition(4450);  // Set the target position for lift
                //2500 is closest, 2000 is used for debugging
                CascadeLift.setMode(DcMotor.RunMode.RUN_TO_POSITION);  // Move to target position
                CascadeLift.setPower(1);  // Set motor power to move towards target
            }
            
            // Control CascadeLift with the A button (move to home position)
            if (gamepad1.a) {
                CascadeLift.setTargetPosition(0);  // Home position
                CascadeLift.setMode(DcMotor.RunMode.RUN_TO_POSITION);  // Move to target position
                CascadeLift.setPower(1);  // Set motor power to move towards target
            }
            
            // Stop CascadeLift when it reaches the target position
            if (!CascadeLift.isBusy()) {
                CascadeLift.setPower(0);  // Stop motor once target position is reached
            }
            
            // Telemetry for debugging
            telemetry.addData("CascadeLift Position", CascadeLift.getCurrentPosition());
            telemetry.addData("CascadeLift Target", CascadeLift.getTargetPosition());
            telemetry.update();
                    if(gamepad2.dpad_down) { bakje.setPosition(0.65); }
        if(gamepad2.dpad_up) { bakje.setPosition(0.37); }

        }
    }
    
    
}
